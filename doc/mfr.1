.TH MFR 1
.SH NAME
mfr \- multiple file renamer
.SH SYNOPSIS
.B mfr
[\fB\-by\fR] 
[\fB\-m\fR \fIMATCH-PATTERN\fR] 
[\fB\-r\fR \fIREPLACE-STRING\fR]
[\fB\-s\fR \fISOURCE-FILE\fR]
.IR FILE ...
.SH DESCRIPTION
.B mfr
batch renames files using Lua patterns.
.SH OPTIONS
.TP
.BR \-b ", " \-\-break
Abort when an error is encountered, exiting with status 1.
.TP
.BR \-m ", " \-\-match =\fIPATTERN\fR
A Lua pattern to match the provided filenames against.
Will be prompted for interactively if not provided.
.TP
.BR \-r ", " \-\-replace =\fIPATTERN\fR
A string to replace the match pattern with in the provided filenames.
Will be prompted for interactively if not provided.
.TP
.BR \-s ", " \-\-source =\fIFILE\fR
Match against lines from FILE instead of the original filenames.
If no FILE is provided, match against lines from stdin.
.TP
.BR \-y ", " \-\-yes
Always answer "yes" at yes/no prompts.
.SH EXAMPLES
.SS Matching against filenames
Rename 
.I file01.txt
and 
.I file2.txt 
to
.I repl01.txt
and
.I repl2.txt:
.nf
.RS
.PP
mfr -m "file(%d+)" -r "repl%1" file01.txt file2.txt
.PP
.RE
.PP
.RS
echo "foo\\nbar" | mfr -s -m "file(%d+)" -r "^[^.+]" \e
    file01.txt file2.txt
.PP
.RE
Renames file01.txt and file2.txt to foo.txt and bar.txt.
.fi
.SH EXIT STATUS
.TP
.B 0
All files were renamed correctly.
.TP
.B 1
One or more files were not renamed correctly.
.SH SEE ALSO
.TP
Lua pattern reference:
<http://www.lua.org/manual/5.1/manual.html#5.4.1>
