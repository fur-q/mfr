=encoding utf8

=head1 NAME

mfr - multiple file renamer

=head1 SYNOPSIS

mfr [-cxy] [-l LUA-SCRIPT] [-m MATCH-PATTERN] [-r REPLACE-STRING] [-s SOURCE-FILE] FILE...

=head1 DESCRIPTION

mfr batch renames files using Lua patterns.

Replacement filenames may be derived from the original filenames, from lines in a text file specified by B<--source>, or from standard input.

If standard input is not a TTY, it is assumed to contain a list of filenames. Other options which accept input on stdin must be entered interactively.

=head1 OPTIONS

=over 4

=item B<-c, --cautious>

Abort when an error is encountered, exiting with status 1.

=item B<-l, --lua-script=[FILE]>

Path to a Lua script, which must return a table or a function.

The returned value will be used as the final argument to string.gsub\() when matching against filenames.

If the argument is "-", match against lines from standard input.

=item B<-m, --match=[PATTERN]>

A Lua pattern to match the provided filenames against.

Will be prompted for if not provided.

=item B<-r, --replace=[STRING]>

A string to replace the match pattern with in the provided filenames.

Will be ignored if B<--lua-script> is specified. Will be prompted for if not specified or ignored.

=item B<-s, --source=[FILE]>

Match against lines from FILE instead of the original filenames. If there are fewer lines in FILE than filenames, stop matching when there are no lines left.

If the argument is "-", match against lines from standard input.

=item B<-x, --no-extensions>

Do not match against or replace file extensions.

=item B<-y, --yes>

Always answer yes at yes/no prompts.

=back

=head1 EXIT STATUS

0: All files were renamed correctly.

1: One or more errors were encountered while renaming.

=head1 EXAMPLES

=head2 Matching against filenames

Rename file01.txt and file2.txt to repl01.txt and repl2.txt:

 $ mfr -m "file(%d+).txt" -r "repl%1.txt" file01.txt file2.txt

This can be expressed more concisely with --no-extensions:

 $ mfr -x -m "file(%d+)" -r "repl%1" file01.txt file2.txt

=head2 Matching against a source file

Rename file01.txt and file2.txt to foo.txt and bar.txt:

 $ cat src.txt
 foo
 bar
 $ mfr -x -s src.txt -m "file(%d+)" -r "^[^.+]" file01.txt file2.txt

=head2 Replacing using a Lua script

Rename file.lua and file.c to file01.lua and file02.c:

 $ cat func.lua
 local x = 0
 return function(s)
    x = x + 1; return string.format("%s%02d", s, x)
 end
 $ mfr -x -l func.lua -m "file" file.lua file.c

=head2 Providing filenames on standard input

Sort some filenames by last modified date and rename them:

 $ ls -t | mfr -x -m "(.+)" -r "renamed_%1"

This is particularly useful in conjunction with --lua-script.

=head1 SEE ALSO

L<Lua pattern reference:|http://www.lua.org/manual/5.1/manual.html#5.4.1>

L<Lua string.gsub reference:|http://www.lua.org/manual/5.1/manual.html#pdf-string.gsub>
